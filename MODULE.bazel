# metaos/MODULE.bazel

module(
    name = "metaos",
    version = "0.0.1",
)

bazel_dep(name = "nlohmann_json", version = "3.12.0")
bazel_dep(name = "cpp-httplib", version = "0.22.0") 
bazel_dep(name = "protobuf", version = "28.0")
bazel_dep(name = "grpc", version = "1.72.0")
bazel_dep(name = "rules_proto", version = "5.3.0-21.7")
bazel_dep(name = "rules_cc", version = "0.0.9")
bazel_dep(name = "rules_rust", version = "0.67.0")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)

git_override(
    module_name = "hedron_compile_commands",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
    commit = "abb61a688167623088f8768cc9264798df6a9d10",
)

# Rust configuration
RUST_EDITION = "2024"
RUST_VERSION = "1.88.0"

crate = use_extension("@rules_rust//crate_universe:extensions.bzl", "crate")

crate.spec(package = "tokio", features = ["full"] ,version = "1.48.0")
crate.spec(package = "matrix-sdk" ,version = "0.14.0")
crate.spec(package = "anyhow" ,version = "1.0")
crate.spec(package = "tracing-subscriber" ,version = "0.3")
crate.spec(package = "tracing" ,version = "0.1.41")
crate.spec(package = "dotenv" ,version = "0.15.0")

crate.from_specs()

use_repo(crate, "crates")

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = RUST_EDITION,
    versions = [RUST_VERSION],
)

use_repo(rust, "rust_toolchains")
register_toolchains("@rust_toolchains//:all")

# Additional dependencies
fmt_dep = use_extension("//bazel:deps.bzl", "fmt_dep")
use_repo(fmt_dep, "fmt")

libenvpp_dep = use_extension("//bazel:deps.bzl", "libenvpp_dep")
use_repo(libenvpp_dep, "libenvpp")
